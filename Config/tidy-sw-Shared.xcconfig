//
// tidy-sw-Shared.xcconfig
//
//  Created by Jim Derry on 2017/10/20 with help by BuildSettingExtractor
//



// We don't want to see a third party library's documentation comment
// warnings.

CLANG_WARN_DOCUMENTATION_COMMENTS = no



// LibTidy is meant to be a C89 library, so this will ensure that we
// receive warnings if we attempt to do things from newer standards.

GCC_C_LANGUAGE_STANDARD = gnu89



// Executable Prefix
// 
// The prefix used for the executable product generated by the target, which
// has a default value based on the product type.

EXECUTABLE_PREFIX = lib



// Prefix Header
// 
// LibTidy's `version.txt` is compiled to this file, which is included
// in every build to provide version number and release date.

GCC_PREFIX_HEADER = ${SRCROOT}/CLibTidy/tidy-html5-version.h



// Preprocessor Macros
//
// Space-separated list of preprocessor macros of the form "foo" or "foo=bar".
// LibTidy has some macro definitions available to control the build.
// SUPPORT_GETPWNAM - define to use getpwnam() in file paths.
// SUPPORT_LOCALIZATIONS - define to support Tidy's native localization.
// SUPPORT_CONSOLE_APP - define to ensure that console strings and console-
//   specific functions are included in the library.
// ENABLE_DEBUG_LOG - define to output debugging messages.
// ENABLE_ALLOC_DEBUG - define to output node allocation diagnostics.
// ENABLE_MEMORY_DEBUG - define to output some memory diagnostics.

TIDY_PREPROCESSOR_DEFINITIONS = SUPPORT_GETPWNAM=1 SUPPORT_LOCALIZATIONS=1 SUPPORT_CONSOLE_APP=1
GCC_PREPROCESSOR_DEFINITIONS =  $(inherited) $(TIDY_PREPROCESSOR_DEFINITIONS)



// Installation Directory
// 
// The directory to install the build products in. This path is prepended by
// the 'Installation Build Products Location' (i.e., $(DSTROOT)). Because
// this dylib is meant to be installed anywhere, we give it this simple
// value.

INSTALL_PATH = @rpath



// Module Map File
// 
// We want to use LibTidy as a module called CLibTidy so we can use a simple
// import. This module's module map is in the source here:

MODULEMAP_FILE = $(SOURCE_ROOT)/CLibTidy/module.modulemap



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)
