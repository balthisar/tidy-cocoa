//
// console-Shared.xcconfig
//
//  Created by Jim Derry on 2017/10/20 with help by BuildSettingExtractor
//


// App Setup and Configuration
PRODUCT_NAME = $(TARGET_NAME)


// Runpath Search Paths
// 
// Because this is a console application, we want to attempt to load frameworks
// from the same directory as the executable (@executable path), as well as
// from /Library/Frameworks/ (automatic behavior) and ~/Library/Frameworks/
// (automatic behavior).
//
// We also have to point it to the SwLibTidyConsole.framework at each of these
// locations to that the Swift Standard Library can be found.

SWLIBTIDYCONSOLE = SwLibTidyConsole.framework/Versions/A/Frameworks

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path @executable_path/$(SWLIBTIDYCONSOLE) "Users/**/Library/Frameworks/$(SWLIBTIDYCONSOLE)" /Library/Frameworks/$(SWLIBTIDYCONSOLE)
//LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path


// We want to ensure that this console application does *not* embed the
// Swift Standard Library into its executable, which is normally automatic
// because it has no bundle to package frameworks in, and macOS doesn't
// include them as part of the operating system yet. By forcing dynamic
// linking, we have to make sure that the LD_RUNPATH_SEARCH_PATHS is pointing
// to a framework that *does* include the Swift Standard Library.

SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES
SWIFT_FORCE_STATIC_LINK_STDLIB = NO
//SWIFT_FORCE_DYNAMIC_LINK_STDLIB = NO
//SWIFT_FORCE_STATIC_LINK_STDLIB = YES


// Since this is a demo application, we don't care if the releases differ,
// and so we'll just not optimize anything at all.
SWIFT_OPTIMIZATION_LEVEL = -Onone
